<?phpClass Writer {		public $str='';		public function __construct(){		}	function openFile($module_name){		$this->file = $module_name;	}		function __initializeWriter(){		$this->fh = fopen($this->file,'w') or die("cant Open File");	}		function write(){		fwrite($this->fh,$this->str);	}		function writeHeader($module_name,$parent_name){ 	$this->module_name = $module_name;$this->str .= <<<EOF<?php    // Turn on debugging level    \$Vtiger_Utils_Log = true;    include_once('vtlib/Vtiger/Menu.php');    include_once('vtlib/Vtiger/Module.php');        // Create module instance and save it first    \$module = new Vtiger_Module();    \$module->name = '$module_name';	\$module->parent ='$parent_name';    \$module->save();    \$module->initWebservice();        // Initialize all the tables required    \$module->initTables();    /**    * Creates the following table:    * vtiger_payslip (payslipid INTEGER)    * vtiger_payslipcf(payslipid INTEGER PRIMARY KEY)    * vtiger_payslipgrouprel((payslipid INTEGER PRIMARY KEY, groupname VARCHAR(100))    */        // Add the module to the Menu (entry point from UI)    \$menu = Vtiger_Menu::getInstance('$parent_name');    \$menu->addModule(\$module);EOF;	}		function writeFooter(){		foreach($this->modulefile['listview'] as $key => $value){		$filter .= "->addField(\$".$value.")";	}	$this->str .= <<<EOF	\$filter1 = new Vtiger_Filter();    \$filter1->name = 'All';    \$filter1->isdefault = true;    \$module->addFilter(\$filter1);    // Add fields to the filter created    \$filter1->addField(\$field_block_0_field_0)->addField(\$field_block_0_field_1)->addField(\$field_block_0_field_2)$filter;        /** Associate other modules to this module */    //\$module->setRelatedList(Vtiger_Module::getInstance('Leads'), 'Leads', Array('SELECT'));        /** Set sharing access of this module */    //\$module->setDefaultSharing('Private');        /** Enable and Disable available tools */    \$module->enableTools(Array('Import', 'Export'));    \$module->disableTools('Merge');?>EOF;	}		function writeBlock($block_name,$block_key){	$this->str .=" \n	\$"."$block_key = new Vtiger_Block();	\$"."$block_key"."->label = '$block_name';	\$module->addBlock($"."$block_key);";	}		function writeField($field_data,$field_id,$block_key){		$label = $field_data['label'];	$column = $field_data['columnname'];	$name = $field_data['fieldname'];	$columntype =$field_data['columntype'];	$uitype = $field_data['uitype'];	$typedata = $field_data['typedata'];	$displaytype = $field_data['displaytype'];	$table = $field_data['table'];	$picklist = translateToString($field_data['picklist']);	$relationship = $field_data['relationship'];	$relatedlist = $field_data['relatedlist'];	$search = $field_data['search'];	$link = $field_data['link'];	$listview = $field_data['listview'];	$identifier = $field_data['identifier'];		if(isset($relatedlist) && $relatedlist ==1)		$this->constructRelatedList($field_data);		if(isset($search) && $search == 1)		$this->constructSearch($field_data);		if(isset($link) && $link == 1)		$this->constructLink($field_data);			if(isset($listview))		$this->constructListView($field_data);				if($uitype != 70 && $uitype != 53 && $uitype != 10 && $uitype != 15 && $uitype != 33){			$this->str .="\n				\$"."$field_id = new Vtiger_Field();				\$"."$field_id"."->label = '$label';				\$"."$field_id"."->name = '$column';				\$"."$field_id"."->column = '$column';				\$"."$field_id"."->columntype = '$columntype';				\$"."$field_id"."->uitype = $uitype; 				\$"."$field_id"."->typeofdata = '$typedata';				\$"."$block_key"."->addField(\$"."$field_id); 			";		}elseif($uitype == 70){			$this->str .="\n				\$"."$field_id = new Vtiger_Field();				\$"."$field_id"."->label = '$label';				\$"."$field_id"."->name = '$name';				\$"."$field_id"."->table = '$table';				\$"."$field_id"."->column = '$column';				\$"."$field_id"."->uitype = $uitype; 				\$"."$field_id"."->typeofdata = '$typedata';				\$"."$field_id"."->displaytype = $displaytype;				\$"."$block_key"."->addField(\$"."$field_id); 			";		}elseif($uitype == 53){			$this->str .="\n				\$"."$field_id = new Vtiger_Field();				\$"."$field_id"."->label = '$label';				\$"."$field_id"."->name = '$name';				\$"."$field_id"."->table = '$table';				\$"."$field_id"."->column = '$column';				\$"."$field_id"."->uitype = $uitype; 				\$"."$field_id"."->typeofdata = '$typedata';				\$"."$block_key"."->addField(\$"."$field_id); 			";		}elseif($uitype == 10){			$this->str .="\n				\$"."$field_id = new Vtiger_Field();				\$"."$field_id"."->label = '$label';				\$"."$field_id"."->name = '$column';				\$"."$field_id"."->column = '$column';				\$"."$field_id"."->columntype = '$columntype';				\$"."$field_id"."->uitype = $uitype; 				\$"."$field_id"."->typeofdata = '$typedata';				\$"."$block_key"."->addField(\$"."$field_id); 				\$"."$field_id"."->setRelatedModules(Array('$relationship'));			";		}elseif($uitype == 15 || $uitype == 33){			$this->str .="\n				\$"."$field_id = new Vtiger_Field();				\$"."$field_id"."->label = '$label';				\$"."$field_id"."->name = '$column';				\$"."$field_id"."->column = '$column';				\$"."$field_id"."->columntype = '$columntype';				\$"."$field_id"."->uitype = $uitype; 				\$"."$field_id"."->typeofdata = '$typedata';				\$"."$block_key"."->addField(\$"."$field_id); 				\$"."$field_id"."->setPicklistValues(Array($picklist));			";		}				if(isset($identifier))			$this->str .="\n				\$module->setEntityIdentifier(\$"."$field_id);				";		}			function writeHeaderModule($MODULENAMECLASS,$MODULENAME){		$this->str = "";	$MODULENAMEID = $MODULENAME."id";	$MODULENAMECF = $MODULENAME."cf";	$this->str .= <<<EOF<?php/*+********************************************************************************** * The contents of this file are subject to the vtiger CRM Public License Version 1.0 * ("License"); You may not use this file except in compliance with the License * The Original Code is:  vtiger CRM Open Source * The Initial Developer of the Original Code is vtiger. * Portions created by vtiger are Copyright (C) vtiger. * All Rights Reserved. ************************************************************************************/require_once('data/CRMEntity.php');require_once('data/Tracker.php');class $MODULENAMECLASS extends CRMEntity {	var \$db, \$log; // Used in class functions of CRMEntity	var \$table_name = 'vtiger_$MODULENAME';	var \$table_index= '$MODULENAMEID';	var \$column_fields = Array();	/** Indicator if this is a custom module or standard module */	var \$IsCustomModule = true;	/**	 * Mandatory table for supporting custom fields.	 */	var \$customFieldTable = Array('vtiger_$MODULENAMECF', '$MODULENAMEID');	var \$related_tables = Array ('vtiger_$MODULENAMECF' => Array('$MODULENAMEID'));	/**	 * Mandatory for Saving, Include tables related to this module.	 */	var \$tab_name = Array('vtiger_crmentity', 'vtiger_$MODULENAME', 'vtiger_$MODULENAMECF');	/**	 * Mandatory for Saving, Include tablename and tablekey columnname here.	 */	var \$tab_name_index = Array(		'vtiger_crmentity' => 'crmid',		'vtiger_$MODULENAME'   => '$MODULENAMEID',	    'vtiger_$MODULENAMECF' => '$MODULENAMEID');EOF;	}	function writeVariables($modulefiles){		$list_fields = substr($modulefiles['list_fields'],0,-1);	$list_fields_name =substr($modulefiles['list_fields_name'],0,-1);	$search_fields = substr($modulefiles['search_fields'],0,-1);	$search_fields_name = substr($modulefiles['search_fields_name'],0,-1);	$list_link_field = $modulefiles['list_link_field'];	$popup_fields = $modulefiles['popup_fields'];	$def_basicsearch_col = $modulefiles['def_basicsearch_col'];	$def_detailview_recname = $modulefiles['def_detailview_recname'];	$required_fields = $modulefiles['required_fields'];	$special_functions = $modulefiles['special_functions'];	$default_order_by = $modulefiles['default_order_by'];	$default_sort_order = $modulefiles['default_sort_order'];	$mandatory_fields = $modulefiles['mandatory_fields'];	$this->str .=<<<EOF		/**	 * Mandatory for Listing (Related listview)	 */	var \$list_fields = Array (		/* Format: Field Label => Array(tablename, columnname) */		// tablename should not have prefix 'vtiger_'		$list_fields	);	var \$list_fields_name = Array(		/* Format: Field Label => fieldname */		$list_fields_name	);	// Make the field link to detail view from list view (Fieldname)	var \$list_link_field = $list_link_field;	// For Popup listview and UI type support	var \$search_fields = Array(		/* Format: Field Label => Array(tablename, columnname) */		// tablename should not have prefix 'vtiger_'		$search_fields	);	var \$search_fields_name = Array(		/* Format: Field Label => fieldname */		$search_fields_name	);	// For Popup window record selection	var \$popup_fields = $popup_fields;	// Placeholder for sort fields - All the fields will be initialized for Sorting through initSortFields	var \$sortby_fields = Array();	// For Alphabetical search	var \$def_basicsearch_col = $def_basicsearch_col;	// Column value to use on detail view record text display	var \$def_detailview_recname = $def_detailview_recname;	// Required Information for enabling Import feature	var \$required_fields = $required_fields;	// Callback function list during Importing	var \$special_functions = $special_functions;	var \$default_order_by = $default_order_by;	var \$default_sort_order=$default_sort_order;	// Used when enabling/disabling the mandatory fields for the module.	// Refers to vtiger_field.fieldname values.	var \$mandatory_fields = $mandatory_fields;EOF;	}			function writeFooterModule($footer){	$file_footer = $footer;	$current_footer = file_get_contents($file_footer);	$this->str .= "\n\t".$current_footer;	//$current = file_get_contents($file);	// Append a new person to the file	//$current .= "John Smith\n";	//file_put_contents($file, $current);	}			function constructRelatedList($field_data){		$label = $field_data['label'];		$column = $field_data['columnname'];				$this->modulefile['list_fields'] .= "'".$label."' => Array('".strtolower($this->module_name)."','".$column."'),";		$this->modulefile['list_fields_name'] .= "'".$label."' => '".$column."',";		}	function constructSearch($field_data){		$label = $field_data['label'];		$column = $field_data['columnname'];				$this->modulefile['search_fields'] .= "'".$label."' => Array('".strtolower($this->module_name)."','".$column."'),";		$this->modulefile['search_fields_name'] .= "'".$label."' => '".$column."',";	}	function constructLink($field_data){		$column = $field_data['columnname'];			$this->modulefile['list_link_field'] = "'".$column."'";		$this->modulefile['popup_fields'] = "Array('".$column."')";		$this->modulefile['def_basicsearch_col'] = "'".$column."'";		$this->modulefile['def_detailview_recname'] = "'".$column."'";		$this->modulefile['required_fields'] =  "Array('".$column."'=>1)";		$this->modulefile['special_functions'] =  "Array('set_import_assigned_user')";		$this->modulefile['default_order_by'] =  "'".$column."'";		$this->modulefile['default_sort_order'] =  "'ASC'";		$this->modulefile['mandatory_fields'] =  "Array('createdtime', 'modifiedtime', '".$column."')";	}		function constructListView($field_data){		$this->modulefile['listview'][] = $field_data['listview'];	}			function getModuleFile(){		return $this->modulefile;	}	function close(){		fclose($this->fh);	}}?>