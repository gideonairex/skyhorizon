<?php

global $adb;

$sql = "select * from vtiger_archecks inner join vtiger_crmentity on vtiger_archecks.archecksid = vtiger_crmentity.crmid where deleted = 0 and arhk_status='Released'";
$result = $adb->pquery( $sql, array() );
$num_rows = $adb->num_rows( $result );

$Cids = array();
require_once ("modules/ARChecks/ARChecks.php");
$archeck = new ARChecks();
$archeck->setColumns('ARChecks');
$archeck->mode = 'edit';

if( $num_rows > 0 ) {

	for( $i = 0; $i < $num_rows; $i++ ) {
		$id = $adb->query_result( $result, $i, 'archecksid' );
		$archeck->id = $id;
		$archeck->retrieve_entity_info($id, 'ARChecks');

		$checkdate = date("F j, Y", strtotime( $archeck->column_fields['date_of_chk'] ) );
		$datenow = date("F j, Y");

		if( strtotime($checkdate) <= strtotime($datenow) ) {
			$Cids[$i] = $adb->query_result( $result, $i, 'collection_no' );
			$archeck->column_fields['arhk_status'] = 'Cleared';
			$archeck->save('ARChecks');
		}
	}

	$cidstrings = implode( ',', $Cids );

	$query = "SELECT vtiger_crmentity.*, vtiger_accountsreceivable.*, CASE WHEN (vtiger_users.user_name NOT LIKE '') THEN CONCAT(vtiger_users.first_name,' ',vtiger_users.last_name) ELSE vtiger_groups.groupname END AS user_name, vtiger_accountsreceivablecf.* FROM vtiger_accountsreceivable INNER JOIN vtiger_crmentity ON vtiger_crmentity.crmid = vtiger_accountsreceivable.accountsreceivableid INNER JOIN vtiger_crmentityrel ON (vtiger_crmentityrel.relcrmid = vtiger_crmentity.crmid OR vtiger_crmentityrel.crmid = vtiger_crmentity.crmid) LEFT JOIN vtiger_accountsreceivablecf ON vtiger_accountsreceivablecf.accountsreceivableid = vtiger_accountsreceivable.accountsreceivableid LEFT JOIN vtiger_users ON vtiger_users.id = vtiger_crmentity.smownerid LEFT JOIN vtiger_groups ON vtiger_groups.groupid = vtiger_crmentity.smownerid WHERE vtiger_crmentity.deleted = 0 AND (vtiger_crmentityrel.crmid in (".$cidstrings.") OR vtiger_crmentityrel.relcrmid in (".$cidstrings."))";

	$accounts_receivable = $adb->pquery( $query, array() );
	$numOfRecords = $adb->num_rows($accounts_receivable);

	require_once ("modules/AccountsReceivable/AccountsReceivable.php");
	$ar_obj = new AccountsReceivable();
	$ar_obj->setColumns('AccountsReceivable');
	$ar_obj->mode = 'edit';

	for ($i = 0; $i < $numOfRecords; $i++) {
		$id = $adb->query_result( $accounts_receivable, $i, 'accountsreceivableid' );
		$ar_obj->id = $id;
		$ar_obj->retrieve_entity_info($id, 'AccountsReceivable');

		$payment = $ar_obj->column_fields['payment'] + $ar_obj->column_fields['awt'] + $ar_obj->column_fields['bc'];
		if( $payment == 0 ){
			$status = 'Unpaid';
		}else{
			$status = 'Paid';
			if( $payment < $ar_obj->column_fields['sales'] ){
				$status = 'Partial';
			}
		}

		$ar_obj->column_fields['ar_status'] = $status;
		$ar_obj->save('AccountsReceivable');
	}

}
?>
